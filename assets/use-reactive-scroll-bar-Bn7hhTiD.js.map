{"version":3,"file":"use-reactive-scroll-bar-Bn7hhTiD.js","sources":["../../frontend/src/hooks/use-reactive-scroll-bar.ts"],"sourcesContent":["import { cn } from \"@/lib/utils\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useReactiveScrollBar() {\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const scrollTimeoutRef = useRef<number | null>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    const handleScroll = () => {\r\n      setIsScrolling(true);\r\n\r\n      // Clear any existing timeout\r\n      if (scrollTimeoutRef.current) {\r\n        window.clearTimeout(scrollTimeoutRef.current);\r\n      }\r\n\r\n      // Set a new timeout\r\n      scrollTimeoutRef.current = window.setTimeout(() => {\r\n        setIsScrolling(false);\r\n      }, 1500); // Hide scrollbar after 1.5 seconds of inactivity\r\n    };\r\n\r\n    container.addEventListener(\"scroll\", handleScroll);\r\n\r\n    // Initial mouse movement should show scrollbar\r\n    const handleMouseMove = () => {\r\n      setIsScrolling(true);\r\n\r\n      if (scrollTimeoutRef.current) {\r\n        window.clearTimeout(scrollTimeoutRef.current);\r\n      }\r\n\r\n      scrollTimeoutRef.current = window.setTimeout(() => {\r\n        setIsScrolling(false);\r\n      }, 1500);\r\n    };\r\n\r\n    container.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      container.removeEventListener(\"scroll\", handleScroll);\r\n      container.removeEventListener(\"mousemove\", handleMouseMove);\r\n      if (scrollTimeoutRef.current) {\r\n        window.clearTimeout(scrollTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n  const idleCN = cn(\r\n    \"overflow-auto\",\r\n    \"scrollbar-thin scrollbar-thumb-rounded-md scrollbar-track-transparent\",\r\n    isScrolling ? \"scrollbar-thumb-primary\" : \"scrollbar-thumb-transparent\",\r\n  );\r\n  const resetCN = cn(\r\n    \"overflow-auto\",\r\n    \"scrollbar-thin scrollbar-thumb-rounded-md scrollbar-track-transparent\",\r\n    \"scrollbar-thumb-transparent hover:scrollbar-thumb-primary\",\r\n  );\r\n  return {\r\n    ref: containerRef,\r\n    idleCN,\r\n    resetCN,\r\n  };\r\n}\r\n"],"names":["useReactiveScrollBar","isScrolling","setIsScrolling","useState","scrollTimeoutRef","useRef","containerRef","useEffect","container","handleScroll","handleMouseMove","idleCN","cn","resetCN"],"mappings":"8GAGA,SAAwBA,GAAuB,CAC7C,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAS,EAAK,EAC9CC,EAAmBC,EAAAA,OAAsB,IAAI,EAC7CC,EAAeD,EAAAA,OAAuB,IAAI,EAEhDE,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAYF,EAAa,QAC/B,GAAI,CAACE,EAAW,OAEhB,MAAMC,EAAe,IAAM,CACzBP,EAAe,EAAI,EAGfE,EAAiB,SACnB,OAAO,aAAaA,EAAiB,OAAO,EAI9CA,EAAiB,QAAU,OAAO,WAAW,IAAM,CACjDF,EAAe,EAAK,CACtB,EAAG,IAAI,CACT,EAEAM,EAAU,iBAAiB,SAAUC,CAAY,EAGjD,MAAMC,EAAkB,IAAM,CAC5BR,EAAe,EAAI,EAEfE,EAAiB,SACnB,OAAO,aAAaA,EAAiB,OAAO,EAG9CA,EAAiB,QAAU,OAAO,WAAW,IAAM,CACjDF,EAAe,EAAK,CACtB,EAAG,IAAI,CACT,EAEA,OAAAM,EAAU,iBAAiB,YAAaE,CAAe,EAEhD,IAAM,CACXF,EAAU,oBAAoB,SAAUC,CAAY,EACpDD,EAAU,oBAAoB,YAAaE,CAAe,EACtDN,EAAiB,SACnB,OAAO,aAAaA,EAAiB,OAAO,CAEhD,CACF,EAAG,CAAA,CAAE,EACL,MAAMO,EAASC,EACb,gBACA,wEACAX,EAAc,0BAA4B,6BAAA,EAEtCY,EAAUD,EACd,gBACA,wEACA,2DAAA,EAEF,MAAO,CACL,IAAKN,EACL,OAAAK,EACA,QAAAE,CAAA,CAEJ"}