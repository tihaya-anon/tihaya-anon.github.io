{"version":3,"file":"cards-CxC3jTNL.js","sources":["../../frontend/src/components/star-router.tsx","../../frontend/src/pages/personal/cards.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport StarIcon from \"#/star-icon\";\r\nimport type { ColorVariant } from \"@/constants/color-variant\";\r\nimport type { Position4S as Position } from \"@/constants/position\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ntype StarRouterProps = {\r\n  size?: number | string;\r\n  color?: string;\r\n  position?: Position;\r\n  variant?: ColorVariant;\r\n  strokeWidth?: number;\r\n  className?: string;\r\n  title?: string;\r\n  smooth?: number;\r\n  rotate?: number;\r\n  onClick?: () => void;\r\n  hidden?: boolean;\r\n};\r\n\r\nexport function StarRouter({\r\n  size = \"100%\",\r\n  variant = \"primary\",\r\n  strokeWidth = 0.2,\r\n  className,\r\n  title = \"StarRouter\",\r\n  smooth = 0.45,\r\n  position = \"B\",\r\n  rotate = 0,\r\n  hidden = false,\r\n}: StarRouterProps & React.HTMLAttributes<HTMLDivElement>) {\r\n  let positionClass = \"\";\r\n  let baseRotate = 0;\r\n  switch (position) {\r\n    case \"T\":\r\n      positionClass = \"top-[-53.5%]\";\r\n      baseRotate = 180;\r\n      break;\r\n    case \"L\":\r\n      positionClass = \"left-[-57.5%]\";\r\n      baseRotate = 90;\r\n      break;\r\n    case \"B\":\r\n      positionClass = \"bottom-[-53.5%]\";\r\n      baseRotate = 0;\r\n      break;\r\n    case \"R\":\r\n      positionClass = \"right-[-57.5%]\";\r\n      baseRotate = -90;\r\n      break;\r\n  }\r\n\r\n  // Calculate rotation degree directly from props\r\n  const starClassName = cn(className, positionClass, \"fixed max-w-md z-[-1]\");\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center\" style={{ display: hidden ? \"none\" : \"flex\" }}>\r\n      <StarIcon\r\n        size={size}\r\n        variant={variant}\r\n        animation=\"none\"\r\n        strokeWidth={strokeWidth}\r\n        n={9}\r\n        step={4}\r\n        className={starClassName}\r\n        style={{\r\n          transform: `rotate(${baseRotate + rotate}deg)`,\r\n          transition: \"all 0.5s ease\",\r\n        }}\r\n        title={title}\r\n        smooth={smooth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ntype UseStarRouterReturn = {\r\n  rotate: number;\r\n  rotateLeft: () => void;\r\n  rotateRight: () => void;\r\n};\r\n\r\nexport default function useStarRouter(): UseStarRouterReturn {\r\n  const [rotate, setRotate] = useState(0);\r\n  const rotateLeft = () => {\r\n    const prevRotate = rotate - 40;\r\n    setRotate(prevRotate);\r\n  };\r\n  const rotateRight = () => {\r\n    const nextRotate = rotate + 40;\r\n    setRotate(nextRotate);\r\n  };\r\n  return {\r\n    rotate,\r\n    rotateLeft,\r\n    rotateRight,\r\n  };\r\n}\r\n","import useStarRouter, { StarRouter } from \"#/star-router\";\r\nimport { Button } from \"#/ui/button\";\r\nimport { ChevronRight, ChevronLeft } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { useState, useRef, useEffect, useCallback, type JSX } from \"react\";\r\ninterface CardsProps extends React.ComponentProps<\"div\"> {\r\n  cards: ((props: React.ComponentProps<\"div\">) => JSX.Element)[];\r\n}\r\n\r\nexport default function Cards({ cards, ...props }: CardsProps) {\r\n  const cycleCards = [...cards, ...cards, ...cards];\r\n\r\n  const { rotate, rotateLeft, rotateRight } = useStarRouter();\r\n  const [idx, setIdx] = useState(0);\r\n\r\n  const saveLoop = (idx: number, phase: number, total: number) => (idx + phase + total) % total;\r\n  const prevIdx = saveLoop(idx, -1, cycleCards.length);\r\n  const nextIdx = saveLoop(idx, 1, cycleCards.length);\r\n\r\n  const toPrev = useCallback(() => {\r\n    setIdx(prevIdx);\r\n    rotateRight();\r\n  }, [prevIdx, rotateRight]);\r\n\r\n  const toNext = useCallback(() => {\r\n    setIdx(nextIdx);\r\n    rotateLeft();\r\n  }, [nextIdx, rotateLeft]);\r\n\r\n  const ArrowButton = (className: string, direction: \"left\" | \"right\", onClick: () => void) => {\r\n    className = cn(\r\n      \"text-foreground transition\",\r\n      \"hover:text-primary hover:cursor-pointer\",\r\n      \"active:scale-90 active:text-primary active:opacity-80\",\r\n      \"focus:outline-none focus:ring-2 focus:ring-primary focus:ring-opacity-50\",\r\n      className,\r\n    );\r\n    if (direction === \"left\") {\r\n      className = cn(className, \"left-[5%]\");\r\n    } else {\r\n      className = cn(className, \"right-[5%]\");\r\n    }\r\n    return (\r\n      <Button variant=\"link\" onClick={onClick} size=\"icon\" className={className} asChild>\r\n        {direction === \"left\" ? (\r\n          <ChevronLeft className=\"h-[2.8rem] w-[2.8rem]\" />\r\n        ) : (\r\n          <ChevronRight className=\"h-[2.8rem] w-[2.8rem]\" />\r\n        )}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const getCardPosition = (cardIdx: number) => {\r\n    if (cardIdx === idx) return \"current\";\r\n    if (cardIdx === prevIdx) return \"prev\";\r\n    if (cardIdx === nextIdx) return \"next\";\r\n    return \"hidden\";\r\n  };\r\n\r\n  const renderCard = (cardIdx: number, position: string) => {\r\n    const CardComponent = cycleCards[cardIdx];\r\n    return (\r\n      <div key={`card-${cardIdx}`} className=\"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\r\n        <CardComponent key={cardIdx} className={position === \"current\" ? \"shadow-xl dark:shadow-accent\" : \"\"} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const touchStartX = useRef<number | null>(null);\r\n  const isScrolling = useRef<boolean>(false);\r\n  const lastScrollTime = useRef<number>(0);\r\n\r\n  useEffect(() => {\r\n    const handleWheel = (e: WheelEvent) => {\r\n      const now = Date.now();\r\n      if (now - lastScrollTime.current < 25 || isScrolling.current) return;\r\n\r\n      isScrolling.current = true;\r\n      lastScrollTime.current = now;\r\n\r\n      if (e.deltaY > 0) {\r\n        toNext();\r\n      } else if (e.deltaY < 0) {\r\n        toPrev();\r\n      }\r\n\r\n      setTimeout(() => {\r\n        isScrolling.current = false;\r\n      }, 500);\r\n    };\r\n\r\n    const container = containerRef.current;\r\n    if (container) {\r\n      container.addEventListener(\"wheel\", handleWheel);\r\n    }\r\n\r\n    return () => {\r\n      if (container) {\r\n        container.removeEventListener(\"wheel\", handleWheel);\r\n      }\r\n    };\r\n  }, [prevIdx, nextIdx, toPrev, toNext]);\r\n\r\n  useEffect(() => {\r\n    const handleTouchStart = (e: TouchEvent) => {\r\n      touchStartX.current = e.touches[0].clientX;\r\n    };\r\n\r\n    const handleTouchEnd = (e: TouchEvent) => {\r\n      if (touchStartX.current === null) return;\r\n\r\n      const touchEndX = e.changedTouches[0].clientX;\r\n      const diff = touchEndX - touchStartX.current;\r\n\r\n      // Only trigger if the swipe is significant enough (more than 50px)\r\n      if (Math.abs(diff) > 50) {\r\n        if (diff > 0) {\r\n          toPrev(); // Swipe right to go to previous\r\n        } else {\r\n          toNext(); // Swipe left to go to next\r\n        }\r\n      }\r\n\r\n      touchStartX.current = null;\r\n    };\r\n\r\n    const container = containerRef.current;\r\n    if (container) {\r\n      container.addEventListener(\"touchstart\", handleTouchStart);\r\n      container.addEventListener(\"touchend\", handleTouchEnd);\r\n    }\r\n\r\n    return () => {\r\n      if (container) {\r\n        container.removeEventListener(\"touchstart\", handleTouchStart);\r\n        container.removeEventListener(\"touchend\", handleTouchEnd);\r\n      }\r\n    };\r\n  }, [prevIdx, nextIdx, toPrev, toNext]);\r\n\r\n  const clickDot = (index: number) => {\r\n    const toIdx = index % cards.length;\r\n    const fromIdx = idx % cards.length;\r\n    const diff = fromIdx - toIdx;\r\n\r\n    if (diff === 0) return; // No need to rotate if already at the target index\r\n\r\n    // Calculate the target index directly\r\n    const targetIdx = saveLoop(idx, diff > 0 ? -Math.abs(diff) : Math.abs(diff), cycleCards.length);\r\n\r\n    // Set the index directly instead of using the navigate functions in a loop\r\n    setIdx(targetIdx);\r\n\r\n    // Apply the appropriate rotation based on the direction and count\r\n    const rotateCount = Math.abs(diff);\r\n    if (diff > 0) {\r\n      // Going backward (right rotation)\r\n      for (let i = 0; i < rotateCount; i++) {\r\n        rotateRight();\r\n      }\r\n    } else {\r\n      // Going forward (left rotation)\r\n      for (let i = 0; i < rotateCount; i++) {\r\n        rotateLeft();\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div {...props}>\r\n      {ArrowButton(cn(\"fixed top-[48%] z-20\"), \"left\", toPrev)}\r\n      {ArrowButton(cn(\"fixed top-[48%] z-20\"), \"right\", toNext)}\r\n      <div className=\"flex flex-col items-center justify-center w-full h-[100vh]\">\r\n        <div ref={containerRef} className=\"relative w-full h-[100vh] flex items-center justify-center\">\r\n          {cycleCards.map((_, cardIdx) => {\r\n            const position = getCardPosition(cardIdx);\r\n            if (position === \"hidden\") return null;\r\n\r\n            return (\r\n              <div\r\n                key={`card-container-${cardIdx}`}\r\n                className={cn(\r\n                  \"absolute w-full h-full flex items-center justify-center transition-all\",\r\n                  position === \"current\"\r\n                    ? \"opacity-100 scale-100 z-10 duration-500\"\r\n                    : \"opacity-70 scale-90 z-0 duration-500\",\r\n                  position === \"prev\" ? \"-translate-x-[50%] duration-450\" : \"\",\r\n                  position === \"next\" ? \"translate-x-[50%] duration-450\" : \"\",\r\n                )}\r\n              >\r\n                {renderCard(cardIdx, position)}\r\n              </div>\r\n            );\r\n          })}\r\n          {cards.length > 1 && (\r\n            <div className=\"flex flex-row gap-2 z-10 absolute bottom-[17.5%] hover:cursor-pointer\">\r\n              {Array.from({ length: cards.length }).map((_, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={cn(\r\n                    \"w-2 h-2 rounded-full transition-colors\",\r\n                    index === idx % cards.length ? \"bg-primary\" : \"bg-muted\",\r\n                  )}\r\n                  onClick={() => clickDot(index)}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <StarRouter position=\"B\" rotate={rotate} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["StarRouter","size","variant","strokeWidth","className","title","smooth","position","rotate","hidden","positionClass","baseRotate","starClassName","cn","jsx","StarIcon","useStarRouter","setRotate","useState","prevRotate","nextRotate","Cards","cards","props","cycleCards","rotateLeft","rotateRight","idx","setIdx","saveLoop","phase","total","prevIdx","nextIdx","toPrev","useCallback","toNext","ArrowButton","direction","onClick","Button","ChevronLeft","ChevronRight","getCardPosition","cardIdx","renderCard","CardComponent","containerRef","useRef","touchStartX","isScrolling","lastScrollTime","useEffect","handleWheel","e","now","container","handleTouchStart","handleTouchEnd","diff","clickDot","index","toIdx","targetIdx","rotateCount","i","jsxs","_"],"mappings":"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"}